<?php

namespace eProcess\EntityBundle\Entity;

use eProcess\SecurityBundle\Constantes\Status;

/**
 * DepartementTable
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DepartementTable extends \Doctrine\ORM\EntityTable
{
    
    /**
     * findOther : fonction de recuperation des departement ayant le meme nom que : $nomDepartement 
     * 
     *              mais que l'identifiant est différent de $idDepartement. 
     * 
     * @param int $idDepartement
     * @param int $nomDepartement
     * @return array
     */
    public function findOther($idDepartement, $nomDepartement) {
        $params['idDepartement'] = $idDepartement;
        $params['nomDepartement'] = $nomDepartement;
        
        $query = $this->createQueryBuilder('p')
                ->where('p.id != :idDepartement')
                ->andWhere('p.nom = :nomDepartement')
                ->setParameters($params)->getQuery();
        
        return $query->getResult() ;
    }
    
     /**
     * findDeletables : fonction de recuperation des departements supprimables
     * 
     */
    public function findDeletables() {
        $result = array() ;
        
        // recuperation des departements desactivés
        $desactiveProf = $this->createQueryBuilder('d')
                ->where('d.isActif ='.Status::INACTIF)
                ->getQuery() ->getResult() ;
        
        // recuperation des departement sans utilisateurs parmmis ces departements desactivés
        foreach ($desactiveProf as $departement) {
            $nbUser = count($departement->getUtilisateurs()) ;
            $nbAchat = count($departement->getAchats()) ;
            
            // on recupere les departement inactif qui n'ont pas d'utilisateur et d'achat
            if($nbUser == 0 && $nbAchat==0 ){
                $result[] = $departement ;
            }
        }
        
        // renvoi de la liste des departements à supprimer
        return $result;
        
    }
}
